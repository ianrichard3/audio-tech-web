name: CI/CD - Raspberry Deploy (no git on VPS)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REMOTE_PATH: ${{ secrets.REMOTE_PATH }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Preparar clave SSH y known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "$PI_SSH_PRIVATE_KEY" > key.pem
          chmod 600 key.pem

          # Opcional pero recomendado: fijar la huella del host para evitar MITM
          # Si no conocés la huella, podés mantener StrictHostKeyChecking=no como en tu versión anterior.
          if [ -n "${PI_HOST}" ]; then
            ssh-keyscan -p "${PI_SSH_PORT}" "${PI_HOST}" >> ~/.ssh/known_hosts 2>/dev/null || true
          fi
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_SSH_PORT: ${{ secrets.PI_SSH_PORT }}
          PI_SSH_PRIVATE_KEY: ${{ secrets.PI_SSH_PRIVATE_KEY }}

      - name: Sincronizar archivos al VPS (sin .git)
        run: |
          rsync -az --delete \
            --exclude ".git" \
            -e "ssh -i key.pem -p ${PI_SSH_PORT} -o StrictHostKeyChecking=no" \
            ./ "${PI_USER}@${PI_HOST}:${REMOTE_PATH}/"
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_SSH_PORT: ${{ secrets.PI_SSH_PORT }}

      - name: Desplegar con Docker Compose en el VPS
        run: |
          ssh -o StrictHostKeyChecking=no -i key.pem -p "$PI_SSH_PORT" "$PI_USER@$PI_HOST" << 'EOF'
          set -e
          cd "$REMOTE_PATH"

          echo "Directorio actual de trabajo: $(pwd)"

          echo "Deteniendo contenedores..."
          docker compose down || true

          echo "Levantando con build..."
          docker compose up -d --build

          echo "Limpieza de imágenes no utilizadas..."
          docker image prune -f || true

          echo "✅ Despliegue completado."
          EOF
        env:
          PI_HOST: ${{ secrets.PI_HOST }}
          PI_USER: ${{ secrets.PI_USER }}
          PI_SSH_PORT: ${{ secrets.PI_SSH_PORT }}
          # hereda REMOTE_PATH de 'env' del job

      - name: Limpiar clave local
        if: always()
        run: rm -f key.pem
